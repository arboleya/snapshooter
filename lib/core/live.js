// Generated by CoffeeScript 1.6.3
(function() {
  var Crawler, Live, http,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  http = require('http');

  Crawler = require('./crawler');

  /*
    Http proxy for crawling live
  */


  module.exports = Live = (function() {
    var time, time_span;

    function Live(the, cli) {
      var server;
      this.the = the;
      this.cli = cli;
      this.request = __bind(this.request, this);
      new Crawler(null, null, null, true);
      server = http.createServer(this.request);
      server.listen(this.cli.argv.port);
      console.info('Server listening on port:', this.cli.argv.port);
    }

    Live.prototype.request = function(req, res) {
      var now, start, status, url,
        _this = this;
      start = time();
      now = "" + ((new Date).toString());
      url = "[" + req.url + "]";
      res.writeHead(200, {
        'Content-Type': 'text/html'
      });
      if (/\./.test(req.url)) {
        status = '[ignored]';
        console.log(now, status, url);
        return res.end();
      }
      return new Crawler(this.cli, this.cli.argv.input + req.url, function(source) {
        var duration;
        res.end(source);
        status = '[success]';
        duration = "â˜…  " + (time_span(start));
        return console.log(now, status, url, duration);
      });
    };

    time = function() {
      return (new Date).getTime();
    };

    time_span = function(start) {
      return (time() - start) + 'ms';
    };

    return Live;

  })();

}).call(this);

/*
//@ sourceMappingURL=live.map
*/
